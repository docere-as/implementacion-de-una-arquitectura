name: Check assigment rules


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


permissions:
  contents: read


jobs:
  check:
    runs-on: ubuntu-latest
    name: Check repository

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Config env
      run: cat ./.config >> "$GITHUB_ENV"
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ env.OTP_VERSION }}
        elixir-version: ${{ env.ELIXIR_VERSION }}

    - name:  Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-elixir-deps
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-

    - name: Cache compiled build
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-compiled-build
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix-

    - name: Clean to rule out incremental build as a source of flakiness
      if: github.run_attempt != '1'
      run: |
        cd $APP_BASE_PATH
        mix deps.clean --all
        mix clean
      shell: sh

    - name: Install dependencies
      run: |
        cd $APP_BASE_PATH
        mix deps.get

    - name: Compiles without warnings
      run: |
        cd $APP_BASE_PATH
        mix compile --warnings-as-errors

    - name: Check Formatting
      run: |
        cd $APP_BASE_PATH
        mix format --check-formatted

    - name: Run tests
      run: |
        cd $APP_BASE_PATH
        mix test
